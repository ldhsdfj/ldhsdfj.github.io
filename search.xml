<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>axios</title>
      <link href="/2022/06/12/axios%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E5%92%8C%E5%B0%81%E8%A3%85/"/>
      <url>/2022/06/12/axios%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E5%92%8C%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="下载-npm-i-axios"><a href="#下载-npm-i-axios" class="headerlink" title="下载 npm i axios"></a>下载 npm i axios</h2><h2 id="封装-axios"><a href="#封装-axios" class="headerlink" title="封装 axios"></a>封装 axios</h2><h2 id="新建一个network文件夹-里面建一个index-js"><a href="#新建一个network文件夹-里面建一个index-js" class="headerlink" title="新建一个network文件夹 里面建一个index.js"></a>新建一个network文件夹 里面建一个index.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">options</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,resject</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> axiosIn=axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">            <span class="attr">baseURL</span>:<span class="string">&quot;http://***.***.**.***&quot;</span>,</span><br><span class="line">            <span class="attr">timeout</span>:<span class="number">2000</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        axiosIn.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求前的拦截&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(config);</span><br><span class="line">            config.<span class="property">params</span>.<span class="property">age</span>=<span class="number">12</span></span><br><span class="line">            <span class="keyword">return</span> config <span class="comment">//返回出数据</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        axiosIn.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求后的拦截&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(config);</span><br><span class="line">            <span class="comment">// if(config.data.code===200)</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;鞑靼&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> config.<span class="property">data</span><span class="comment">//返回出拦截后的数据</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="title function_">axiosIn</span>(options).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">resolve</span>(res)</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">resject</span>(err)</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li>在需要的组件引入这个文件 或则在 main.js全局引入<h3 id="import-network-from-‘-x2F-地址’"><a href="#import-network-from-‘-x2F-地址’" class="headerlink" title="import network from ‘.&#x2F;地址’"></a>import network from ‘.&#x2F;地址’</h3></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">network</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;接口地址&#x27;</span>，</span><br><span class="line">    <span class="attr">methed</span>:<span class="string">&#x27;请求方式 例如post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;&#125;<span class="comment">//需要返回的数据 get是params</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex</title>
      <link href="/2022/06/12/vuex/"/>
      <url>/2022/06/12/vuex/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-vuex"><a href="#安装-vuex" class="headerlink" title="安装 vuex"></a>安装 vuex</h2><h3 id="npm-i-vuex-自行选择对应的版本"><a href="#npm-i-vuex-自行选择对应的版本" class="headerlink" title="npm i vuex@ 自行选择对应的版本"></a>npm i vuex@ 自行选择对应的版本</h3><h2 id="推荐新建一个文件夹store"><a href="#推荐新建一个文件夹store" class="headerlink" title="推荐新建一个文件夹store"></a>推荐新建一个文件夹store</h2><ol><li>引入vuex 并使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>);</span><br></pre></td></tr></table></figure><h1 id="2-五大核心和-对应的简单用法"><a href="#2-五大核心和-对应的简单用法" class="headerlink" title="2. 五大核心和 对应的简单用法"></a>2. 五大核心和 对应的简单用法</h1><h2 id="1模块"><a href="#1模块" class="headerlink" title="1模块"></a>1模块</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> modules=&#123;</span><br><span class="line">    <span class="attr">moduleA</span>:&#123;</span><br><span class="line">        <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">        <span class="attr">mutations</span>:&#123;&#125;,</span><br><span class="line">        <span class="attr">state</span>:&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;a&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">moduleB</span>:&#123;</span><br><span class="line">        <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">        <span class="attr">mutations</span>:&#123;&#125;,</span><br><span class="line">        <span class="attr">state</span>:&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;b&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">getters</span>:&#123;&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-action-响应动作处理逻辑-可执行异步-（dispatch）"><a href="#2-action-响应动作处理逻辑-可执行异步-（dispatch）" class="headerlink" title="2 action 响应动作处理逻辑 可执行异步 （dispatch）"></a>2 action 响应动作处理逻辑 可执行异步 （dispatch）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="title function_">jia</span>(<span class="params">context, value</span>) &#123;<span class="comment">//加法</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;加被调用了&#x27;</span>, context, value);</span><br><span class="line">        context.<span class="title function_">commit</span>(<span class="string">&quot;Jia&quot;</span>, value);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">jian</span>(<span class="params">context, value</span>) &#123;<span class="comment">//减法</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;加被调用了&#x27;</span>, context, value);</span><br><span class="line">        context.<span class="title function_">commit</span>(<span class="string">&quot;Jian&quot;</span>, value);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">jianOdd</span>(<span class="params">context, value</span>) &#123;<span class="comment">//奇数加</span></span><br><span class="line">        <span class="keyword">if</span> (state.<span class="property">sum</span> % <span class="number">2</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;加被调用了&#x27;</span>, context, value);</span><br><span class="line">            context.<span class="title function_">commit</span>(<span class="string">&quot;Jia&quot;</span>, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">time</span>(<span class="params">context,value</span>) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;<span class="comment">//延时加法</span></span><br><span class="line">             context.<span class="title function_">commit</span>(<span class="string">&quot;Jia&quot;</span>,value);  </span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">     </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="3-mutetion-更改state数据-只响应同步-commit"><a href="#3-mutetion-更改state数据-只响应同步-commit" class="headerlink" title="3.mutetion 更改state数据 只响应同步  (commit)"></a>3.mutetion 更改state数据 只响应同步  (commit)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    <span class="title class_">Jia</span>(state, value) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Jia加被调用了&quot;</span>, state, value);</span><br><span class="line">        state.<span class="property">sum</span> += value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title class_">Jian</span>(state, value) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Jian加被调用了&quot;</span>, state, value);</span><br><span class="line">        state.<span class="property">sum</span> -= value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="4-getters-处理数据-返回数据-相当于计算属性"><a href="#4-getters-处理数据-返回数据-相当于计算属性" class="headerlink" title="4.getters  处理数据 返回数据 相当于计算属性"></a>4.getters  处理数据 返回数据 相当于计算属性</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">    <span class="title function_">getlist</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">val</span>)&#123;<span class="comment">//过滤数组</span></span><br><span class="line">            <span class="keyword">return</span> state.<span class="property">list</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span>item.<span class="property">age</span>&gt;val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">getmodelA</span>(<span class="params"></span>)&#123;<span class="comment">//拿到模块的值</span></span><br><span class="line">        <span class="keyword">return</span> state.<span class="property">moduleA</span>.<span class="property">name</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="5-state-存储数据"><a href="#5-state-存储数据" class="headerlink" title="5.state 存储数据"></a>5.state 存储数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    <span class="attr">list</span>: [&#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;kk1&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;kk2&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">24</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;kk3&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;kk4&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">sum</span>: <span class="number">0</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    actions,</span><br><span class="line">    mutations,</span><br><span class="line">    state,</span><br><span class="line">    getters,</span><br><span class="line">    modules</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-router</title>
      <link href="/2022/06/02/vue%E8%B7%AF%E7%94%B1/"/>
      <url>/2022/06/02/vue%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="vue-路由"><a href="#vue-路由" class="headerlink" title="vue 路由"></a>vue 路由</h2><h3 id="安装插件-npm-i-vue-router"><a href="#安装插件-npm-i-vue-router" class="headerlink" title="安装插件 npm i vue-router@"></a>安装插件 npm i vue-router@</h3><h2 id="安装对应的-router-vue2-对应-vue-router3-vue3-对应-vue-router4"><a href="#安装对应的-router-vue2-对应-vue-router3-vue3-对应-vue-router4" class="headerlink" title="安装对应的 router, vue2 对应 vue-router3 , vue3 对应 vue-router4"></a>安装对应的 router, vue2 对应 vue-router3 , vue3 对应 vue-router4</h2><p><a href="https://router.vuejs.org/zh/installation.html">详情参考</a></p><h2 id="新建路由文件-router"><a href="#新建路由文件-router" class="headerlink" title="新建路由文件 router"></a>新建路由文件 router</h2><h3 id="1-在-router-里引入-vue-和路由插件-自己的组件-例如"><a href="#1-在-router-里引入-vue-和路由插件-自己的组件-例如" class="headerlink" title="1. 在 router 里引入 vue 和路由插件 自己的组件 例如"></a>1. 在 router 里引入 vue 和路由插件 自己的组件 例如</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><!--improt foot from './view/foot';improt home from './view/home'; --><h3 id="2-实例化-router"><a href="#2-实例化-router" class="headerlink" title="2. 实例化 router"></a>2. 实例化 router</h3><ol><li>Vue.use(VueRouter)</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> router=<span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span></span><br><span class="line">      <span class="comment">//默认跳转路由</span></span><br><span class="line">      <span class="attr">redirect</span>:<span class="function">()=&gt;</span><span class="keyword">import</span>&#123;组件的相对位置&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/地址&#x27;</span>，</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;/同上&#x27;</span>，</span><br><span class="line">      <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="keyword">import</span>&#123;组件的相对位置&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/地址&#x27;</span>，</span><br><span class="line">      <span class="attr">name</span>:<span class="string">&#x27;/同上&#x27;</span>，</span><br><span class="line">      <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="keyword">import</span>&#123;组件的相对位置&#125;，</span><br><span class="line">      <span class="comment">//子路由的注册</span></span><br><span class="line">      children：[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;地址&#x27;</span>，<span class="comment">//不需要反斜杠了</span></span><br><span class="line">          <span class="attr">name</span>:<span class="string">&#x27;同上&#x27;</span>，</span><br><span class="line">          <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="keyword">import</span>&#123;组件的相对位置&#125;，</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3main-js-里面引用-导出的路由-并在示例里面使用"><a href="#3main-js-里面引用-导出的路由-并在示例里面使用" class="headerlink" title="3main.js 里面引用 导出的路由 并在示例里面使用"></a>3main.js 里面引用 导出的路由 并在示例里面使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import router from &#x27;./router/index&#x27;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router,//使用定义的路由</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li><p>跳转到指定的位置  this.$router.push(‘&#x2F;地址’);</p></li><li><p>跟多的方法属性都可以通过 router 找到</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue事件总线</title>
      <link href="/2022/05/26/vue%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF/"/>
      <url>/2022/05/26/vue%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-组件间通信的方法"><a href="#Vue-组件间通信的方法" class="headerlink" title="Vue 组件间通信的方法"></a>Vue 组件间通信的方法</h1><h2 id="props-emit"><a href="#props-emit" class="headerlink" title=" props  $emit "></a><font color=red> props  $emit </font></h2><h2 id="事件总线"><a href="#事件总线" class="headerlink" title="事件总线"></a>事件总线</h2><h3 id="一-自定义事件"><a href="#一-自定义事件" class="headerlink" title="一.自定义事件"></a>一.自定义事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$on 绑定自定义事件 </span><br><span class="line">（<span class="string">&#x27;事件名字&#x27;</span>，回调函数写在里面用箭头函数的形式）</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> $off 解绑自定义事件 在vue销毁的时候所有的自定义事件失效</span><br><span class="line">(不传参数默认全部清除)</span><br><span class="line">(参数)</span><br><span class="line">(多个参数使用数组[参数(要清除的事件)])</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$emit 触发事件的方法</span><br><span class="line">参数 (<span class="string">&#x27;绑定方法的名字&#x27;</span>,需要传递的参数 可以是任意数据类型 或则函数)</span><br></pre></td></tr></table></figure><h3 id="二-定义事件的总线"><a href="#二-定义事件的总线" class="headerlink" title="二. 定义事件的总线"></a>二. 定义事件的总线</h3><h3 id="（GlobalEventBus）-全局事件总线"><a href="#（GlobalEventBus）-全局事件总线" class="headerlink" title="（GlobalEventBus） 全局事件总线"></a>（GlobalEventBus） 全局事件总线</h3><h4 id="1，一种任意组件之间的通信方式"><a href="#1，一种任意组件之间的通信方式" class="headerlink" title="1，一种任意组件之间的通信方式"></a>1，<font color=red>一种任意组件之间的通信方式</font></h4><h4 id="2-安装全局总线"><a href="#2-安装全局总线" class="headerlink" title="2.安装全局总线"></a>2.安装全局总线</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    -------</span><br><span class="line">    <span class="title function_">beforeCreate</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$bus</span>=<span class="variable language_">this</span> </span><br><span class="line">    &#125;</span><br><span class="line">    -----</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="三-使用事件总线"><a href="#三-使用事件总线" class="headerlink" title="三. 使用事件总线"></a>三. 使用事件总线</h3><ol><li>A组件接收数据，则在A组件中给$bus绑定自定义事件，<font color=red>事件回调留在A组件身上 </font><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">methods</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">demo</span>(<span class="params">data</span>)&#123;</span><br><span class="line">        ------</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$bus</span>.$on(<span class="string">&#x27;xxx&#x27;</span>,<span class="variable language_">this</span>.<span class="property">demo</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>提供数据：this.$bus.$emit(‘xxx’,data)</li></ol><h4 id="4-最好在beforeDestroy钩子中-用-off-解绑当前用到的事件"><a href="#4-最好在beforeDestroy钩子中-用-off-解绑当前用到的事件" class="headerlink" title="4.最好在beforeDestroy钩子中 用$off() 解绑当前用到的事件"></a>4.最好在beforeDestroy钩子中 用$off() <font color=red>解绑当前用到的事件</font></h4><h2 id="消息订阅与发布"><a href="#消息订阅与发布" class="headerlink" title="消息订阅与发布"></a>消息订阅与发布</h2><h3 id="1-安装对应的库-例如-pubsub-js"><a href="#1-安装对应的库-例如-pubsub-js" class="headerlink" title="1 安装对应的库 例如 pubsub-js"></a>1 安装对应的库 例如 pubsub-js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i pubsub</span><br></pre></td></tr></table></figure><h4 id="在需要数据的地方订阅消息"><a href="#在需要数据的地方订阅消息" class="headerlink" title="在需要数据的地方订阅消息"></a>在需要数据的地方订阅消息</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;挂载完成时订阅消息</span><br><span class="line"> <span class="comment">//没有this指向推荐写成箭头函数的形式</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pubIn</span>= pubsub.<span class="title function_">subscribe</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="function">(<span class="params">msgName,data</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;有人发布了hello消息,hello回调执行了&#x27;</span>,msgName,data);</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">//销毁</span></span><br><span class="line"> <span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123; 销毁之前取消订阅</span><br><span class="line">   <span class="comment">// this.$bus.$off(&quot;kda&quot;);</span></span><br><span class="line">   pubsub.<span class="title function_">unsubscribe</span>(<span class="variable language_">this</span>.<span class="property">pubIn</span>)</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h4 id="在有提供数据的地方发布消息"><a href="#在有提供数据的地方发布消息" class="headerlink" title="在有提供数据的地方发布消息"></a>在有提供数据的地方发布消息</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">send</span>(<span class="params"></span>)&#123;</span><br><span class="line">        pubsub.<span class="title function_">publish</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="number">666</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建bolg的方法</title>
      <link href="/2022/05/25/hexo%20%E6%90%AD%E5%BB%BAbolg%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2022/05/25/hexo%20%E6%90%AD%E5%BB%BAbolg%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="HEXO-搭建blog"><a href="#HEXO-搭建blog" class="headerlink" title="HEXO 搭建blog"></a>HEXO 搭建blog</h1><h2 id="1安装hexo-首先需要拥有node-js"><a href="#1安装hexo-首先需要拥有node-js" class="headerlink" title="1安装hexo(首先需要拥有node.js)"></a>1安装hexo(首先需要拥有node.js)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br></pre></td></tr></table></figure><h2 id="1-1-新建一个文件夹打开Git-Bash-Here-输入以下命令初始化文件"><a href="#1-1-新建一个文件夹打开Git-Bash-Here-输入以下命令初始化文件" class="headerlink" title="1.1 新建一个文件夹打开Git Bash Here 输入以下命令初始化文件"></a>1.1 新建一个文件夹打开Git Bash Here 输入以下命令初始化文件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看版本</span><br><span class="line">hexo -v</span><br><span class="line"># 初始化</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="1-2-开启本地服务"><a href="#1-2-开启本地服务" class="headerlink" title="1.2 开启本地服务"></a>1.2 开启本地服务</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>此时Gits Bash Here 上会出现一个本地链接点击即可进入blog首页</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">INFO</span>  <span class="title class_">Start</span> processing</span><br><span class="line"><span class="variable constant_">INFO</span>  <span class="title class_">Hexo</span> is running at <span class="attr">http</span>:<span class="comment">//localhost:4000 . Press Ctrl+C to stop.</span></span><br></pre></td></tr></table></figure><h1 id="2-Gitee-x2F-Gehub-上部署Blog"><a href="#2-Gitee-x2F-Gehub-上部署Blog" class="headerlink" title="2 Gitee &#x2F;Gehub 上部署Blog"></a>2 Gitee &#x2F;Gehub 上部署Blog</h1><h2 id="2-1-本地找到blog文件的config-yml文件-打开修改参数"><a href="#2-1-本地找到blog文件的config-yml文件-打开修改参数" class="headerlink" title="2.1 本地找到blog文件的config._yml文件 打开修改参数"></a>2.1 本地找到blog文件的config._yml文件 打开修改参数</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;git&quot; **类型**</span><br><span class="line">repo: &quot;getee/github&quot; **地址**</span><br><span class="line">branch: &quot;master&quot; **分支**</span><br></pre></td></tr></table></figure><h2 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#生成静态文件 部署到git </span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 语法</title>
      <link href="/2022/05/25/markdown%20%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/05/25/markdown%20%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://markdown.com.cn/basic-syntax/line-breaks.html">详情参考官方文档:https://markdown.com.cn/basic-syntax/line-breaks.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly(蝴蝶主题) 配置文件</title>
      <link href="/2022/05/25/butterfly(%E8%9D%B4%E8%9D%B6)%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2022/05/25/butterfly(%E8%9D%B4%E8%9D%B6)%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h1><h2 id="文件的配置项"><a href="#文件的配置项" class="headerlink" title="文件的配置项"></a>文件的配置项</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left">layout</td><td align="left">布局</td><td align="left"></td></tr><tr><td align="left">title</td><td align="left">标题</td><td align="left"></td></tr><tr><td align="left">date</td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left">updated</td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left">comments</td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left">tags</td><td align="left">标签</td><td align="left">（不适用于分页）</td></tr><tr><td align="left">categories</td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left">permalink</td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left">keywords</td><td align="left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td align="left"></td></tr></tbody></table><p>升级建议<br>为了減少升级主题带来的不便，我们还需要做以下操作：采用如下两种方式中的任意一种都行<br>方式一：<br>把主题文件夹中的 _config.yml 复制到 Hexo 根目录下，同时重命名为 _config.butterfly.yml。</p><p>将</p><ul><li>blog<ul><li>themes<ul><li>Butterfly<ul><li>config.yml<br>复制到</li></ul></li></ul></li></ul></li><li>blog<ul><li>_config.butterfly.yml (将_config.yml重命名)</li></ul></li></ul><p>方式二：<br>推荐把主题默认的配置文件_config.yml 复制到 Hexo 根目录下的source/_data/目录下，然后将文件名改为butterfly.yml（如果 source/_data/ 的目录不存在则创建一个）。</p><p>将</p><ul><li>blog<ul><li>themes<ul><li>Butterfly<ul><li>config.yml<br>复制到</li></ul></li></ul></li></ul></li><li>blog<ul><li>source<ul><li>_data<ul><li>butterfly.yml (将_config.yml重命名)</li></ul></li></ul></li></ul></li></ul><p>主题页面配置<br>Front-matter<br>Front-matter 是每个markdown文件最上方以 — 分隔的区域，用于指定文章的参数。</p><div class="note info flat"><p>如果可选的参数，可根据自己的需要添加，不用全部都写在 markdown里， 是在每一个markdown文件里配置</p></div><h1 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>有的人认为 hexo 自带的主题landscape非常难看，那么我们有没有好看的主题可选呢？</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: bg;color: color">查看回答？    </button><div class="hide-content"><p>当然是有的，有不少的人给我们提供了十分多的主题，查看主题库：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></div></div><p>hexo-theme-butterfly 是基于 Molunerfinn 的 hexo-theme-melody 的基础上进行开发的。<br>接下来推荐几款觉得好看的主题库？</p><p>Butterfly：这款主题非常好看，好用，功能十分齐全，当然本站也是用的该主题<br>安装</p><div class="tabs" id="tab"><ul class="nav-tabs"></ul><div class="tab-contents"></div></div><p>应用主题<br>修改站点配置文件_config.yml，把主题改为 butterfly</p><p>theme: butterfly</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>安装插件<br>如果沒有 pug 以及 stylus 的渲染器，还需要下载，否则在项目运行时会报错：</p><p>npm install hexo-renderer-pug hexo-renderer-stylus –save</p><h2 id="升级建议3"><a href="#升级建议3" class="headerlink" title="升级建议3"></a>升级建议3</h2><p>为了減少升级主题带来的不便，我们还需要做以下操作：采用如下两种方式中的任意一种都行<br>方式一：<br>把主题文件夹中的 _config.yml 复制到 Hexo 根目录下，同时重命名为 _config.butterfly.yml。</p><p>将</p><ul><li>blog<ul><li>themes<ul><li>Butterfly<ul><li>config.yml<br>复制到</li></ul></li></ul></li></ul></li><li>blog<ul><li>_config.butterfly.yml (将_config.yml重命名)</li></ul></li></ul><p>方式二：<br>推荐把主题默认的配置文件_config.yml 复制到 Hexo 根目录下的source/_data/目录下，然后将文件名改为butterfly.yml（如果 source/_data/ 的目录不存在则创建一个）。</p><p>将<br>blog .themes . Butterfly .config.yml</p><p>复制到blog - source - _data- butterfly.yml (将_config.yml重命名)</p><h2 id="主题页面配置"><a href="#主题页面配置" class="headerlink" title="主题页面配置"></a>主题页面配置</h2><p>Front-matter<br>Front-matter 是每个markdown文件最上方以 — 分隔的区域，用于指定文章的参数。</p><div class="note info flat"><p>如果可选的参数，可根据自己的需要添加，不用全部都写在 markdown里， 是在每一个markdown文件里配置</p></div><hr><table><thead><tr><th align="left">配置</th><th align="left">信息</th><th align="right">其他</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">【必填】页面标题</td><td align="right"></td></tr><tr><td align="left">date</td><td align="left">【必填】页面创建日期</td><td align="right"></td></tr><tr><td align="left">type</td><td align="left">【必填】标签、分类和友情链接三个页面必须填写</td><td align="right"></td></tr><tr><td align="left">updated</td><td align="left">【可选】页面更新日期</td><td align="right"></td></tr><tr><td align="left">comments</td><td align="left">【可选】页面评论模块(默认为true)</td><td align="right"></td></tr><tr><td align="left">description</td><td align="left">【可选】页面描述</td><td align="right"></td></tr><tr><td align="left">keywords</td><td align="left">【可选】页面关键字</td><td align="right"></td></tr><tr><td align="left">top_img</td><td align="left">【可选】页面顶部图片</td><td align="right"></td></tr><tr><td align="left">mathjax</td><td align="left">【可选】展示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td><td align="right"></td></tr><tr><td align="left">katex</td><td align="left">【可选】展示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td><td align="right"></td></tr><tr><td align="left">aside</td><td align="left">【可选】展示侧边栏 (默认 true)</td><td align="right"></td></tr><tr><td align="left">aplayer</td><td align="left">【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐配置</td><td align="right"></td></tr><tr><td align="left">highlight_shrink</td><td align="left">【可选】配置代码框是否展开 (true/false)(默认设置为 highlight_shrink 的配置)</td><td align="right"></td></tr><tr><td align="left"></td><td align="left"></td><td align="right"></td></tr></tbody></table><h2 id="可选配置"><a href="#可选配置" class="headerlink" title="可选配置"></a>可选配置</h2><table><thead><tr><th align="left">配置</th><th align="left">信息</th></tr></thead><tbody><tr><td align="left">title:</td><td align="left">【必需】文章标题</td></tr><tr><td align="left">date:</td><td align="left">【必需】文章创建日期</td></tr><tr><td align="left">updated:</td><td align="left">【可选】文章更新日期</td></tr><tr><td align="left">tags:</td><td align="left">【可选】文章标签</td></tr><tr><td align="left">categories:</td><td align="left">【可选】文章分类</td></tr><tr><td align="left">keywords:</td><td align="left">【可选】文章关键字</td></tr><tr><td align="left">description:</td><td align="left">【可选】文章描述</td></tr><tr><td align="left">top_img:</td><td align="left">【可选】文章顶部图片</td></tr><tr><td align="left">comments：</td><td align="left">【可选】显示文章评论模块 (默认 true)</td></tr><tr><td align="left">cover:</td><td align="left">【可选】文章缩略图 (如果没有设置 top_img, 文章页顶部将显示缩略图，可设为 false / 图片地址 / 留空)</td></tr><tr><td align="left">toc:</td><td align="left">【可选】  显示文章 TOC (默认为设置中 toc 的 enable 配置)</td></tr><tr><td align="left">toc_number:</td><td align="left">【可选】显示 toc_number (默认为设置中 toc 的 number 配置)</td></tr><tr><td align="left">auto_open:</td><td align="left">【可选】是否自动打开 TOC (默认为设置中 toc 的 auto_open 配置)</td></tr><tr><td align="left">copyright:</td><td align="left">【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td align="left">copyright_author:</td><td align="left">【可选】文章版权模块的文章作者</td></tr><tr><td align="left">copyright_author_href:</td><td align="left">【可选】文章版权模块的文章作者链接</td></tr><tr><td align="left">copyright_url:</td><td align="left">【可选】文章版权模块的文章连结链接</td></tr><tr><td align="left">copyright_info:</td><td align="left">【可选】文章版权模块的版权声明文字</td></tr><tr><td align="left">mathjax:</td><td align="left">【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td align="left">katex:</td><td align="left">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td align="left">aplayer:</td><td align="left">【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</td></tr><tr><td align="left">highlight_shrink：</td><td align="left">【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><hr>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
